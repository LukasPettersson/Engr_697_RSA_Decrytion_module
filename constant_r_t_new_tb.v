module constant_r_t_new_tb();

reg clk, start;
reg [1024 : 0] M_r, A_r;
wire [1024 : 0] R_r;
wire [1023 : 0] R_t;
wire done;
reg [2047 : 0] M_t, A_t;


always #25 clk = ~clk;


initial begin
	clk = 0;
	A_r = 1025'd0;
	M_r = 1025'bivisor
	M_t = 2048'bivisor
	A_t = 2048'b0;
	#50
	start = 1;
	#50
	start = 0;
end




constant_r_t_new dut(
	.clk(clk),
	.M_r(M_r), // M is divisor
	.A_r(A_r), // A is accumulator and also remainder, same deal as Q_r
	.start(start),
	.R_r(R_r), //Remainder
	.M_t(M_t), // M_t is divisor
	.A_t(A_t), // A_t is accumulator and also remainder, same deal as Q_t
	.R_t(R_t), //Remainder
	.done(done)
	);

endmodule
